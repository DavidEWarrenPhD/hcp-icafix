{
  "name": "hcp-icafix",

  "label": "HCP Functional ICAFIX Pipeline",

  "description": "Run HCP ICAFIX pipeline",

  "version": "0.1.0",

  "author":  "Human Connectome Project",

  "maintainer":  "Flywheel <support@flywheel.io>",

  "license": "Apache-2.0",

  "url":     "https://github.com/Washington-University/Pipelines",

  "source":  "https://github.com/flywheel-apps/hcp-icafix",

  "custom": {

     "docker-image": "flywheel/hcp-icafix:v0.1.0"

  	},

  "config": {
    
    "FIXClassifier": {
      "type": "string",
      "default": "HCP_hp2000",
      "description": "Name of FIX training file to use for classification. 'Standard', 'HCP_hp2000', 'HCP7T_hp2000', 'WhII_MB6', 'WhII_Standard', 'UKBiobank'. See https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide#Trained-weights_files for details."
    },
    
    "RegName": {
      "type": "string",
      "default": "Empty",
      "description": "Surface registration to use during CIFTI resampling: either 'FS' (freesurfer) or 'MSMSulc'. ('Empty'=gear uses RegName from HCP-Structural )"
    },
    
    
    "HighPassFilter": {
      "type": "integer",
      "default": 2000,
      "description": "Cutoff of temporal highpass full-width (2*sigma) in seconds"
    }
  },

  "inputs": {
    
    "CustomClassifier": {
      "description": "User-supplied .RData file for FIX component classification. If provide, pipeline overrides FIXClassifier config param",
      "base": "file",
      "optional": true
    },
    
    "StructZip": {
      "description": "Zipped output from HCP-Struct pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": false
    },
    
    "FuncZip": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": false
    },
    
    "FuncZip2": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip3": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip4": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip5": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip6": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip7": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip8": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip9": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    },
    
    "FuncZip10": {
      "description": "Zipped output from HCP-Func pipeline",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      },
      "optional": true
    }
  }
}
